{"version":3,"sources":["PopUp/DeleteEvent.jsx","PopUp/AddEvent.jsx","generateNumbers.js","getMonday.js","generateWeek.js","Header/ShowMonth.jsx","Header/ControlPanelUser.jsx","Header/Setting.jsx","Header/UserPanel.jsx","Renders/RenderDaysOfWeek.jsx","GreenwichZone.jsx","Renders/RenderDate.jsx","Header/Navigation.jsx","Header/Header.jsx","Renders/TimeTrack.jsx","styleForEvent.js","Renders/RenderEvent.jsx","Renders/RealTimeLine.jsx","Renders/RenderDay.jsx","Renders/RenderWeek.jsx","CalendarSheet.jsx","eventGateway.js","Calendar.jsx","App.jsx","index.js"],"names":["DeleteEvent","isDeleteOpen","eventForDelete","closeDeleteModal","deleteEvent","name","eventDate","additionalInfo","id","className","onClick","AddEvent","onSubmit","event","preventDefault","props","createEvent","this","isModalOpen","onModalClose","eventTime","eventColor","handleChange","type","placeholder","value","required","onChange","step","cols","rows","Component","generateNumbers","from","to","newList","i","push","getMonday","date","getDate","getDay","setDate","Date","moment","format","generateWeek","mondayDate","currentDateTimestamp","getTime","map","day","ShowMonth","week","firstDayOfWeek","lastDayOfWeek","length","monthForFirstDayOfWeek","monthForLastDayOfWeek","currentYearForFirstDayOfWeek","currentYearForLastDayOfWeek","currentYear","ControlPanelUser","nextWeek","prevWeek","onToday","onCreateModalOpen","width","height","viewBox","fill","d","Setting","htmlFor","UserPanel","RenderDaysOfWeek","daysOfWeekList","key","PureComponent","GreenwichZone","Intl","DateTimeFormat","timeZone","hour","minute","hour12","split","formatterHour","timeDifference","getHours","toString","greenwichTime","padStart","RenderDate","dateList","today","Navigation","Header","TimeTrack","hoursList","styleForEvent","startTime","endTime","elem","getStartHour","getStartMinutes","getEndHour","getEndMinutes","top","backgroundColor","RenderEvent","events","onDeleteModalOpen","eventsList","meet","style","data-id","RealTimeLine","state","hourTime","minutesTime","getMinutes","timerId","setInterval","setState","clearInterval","String","RenderDay","dayOfWeek","on–°ellModalOpen","dateToday","isToday","hours","evenInThisTime","filter","e","data-hour","data-date-of-day","RenderWeek","weekList","eventForThisDay","CalendarSheet","baseUrl","fetchEventsList","fetch","then","response","ok","json","method","Error","newEvent","headers","body","JSON","stringify","Calendar","fetchEvents","eventStartTime","eventFinishTime","eventId","stopPropagation","target","start","splice","finish","todayHour","todayTimestamp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.504cf0bb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DeleteEvent = ({ isDeleteOpen, eventForDelete, closeDeleteModal, deleteEvent }) => {\r\n  if (!isDeleteOpen) return null;\r\n  const { name, eventDate, additionalInfo, id } = eventForDelete;\r\n  return (\r\n    <div className=\"modal-delete\">\r\n      <button className=\"modal-delete__icon-close\" onClick={closeDeleteModal}>\r\n        <i className=\"far fa-times-circle\"></i>\r\n      </button>\r\n      <div className=\"modal-delete__event\">\r\n        <i className=\"modal-delete__icon-title far fa-calendar-alt\"></i>\r\n        <h1 className=\"modal-delete__title\">{name}</h1>\r\n      </div>\r\n      <div className=\"modal-delete__data\">\r\n        <i className=\"modal-delete__icon-data far fa-clock\"></i>\r\n        <span className=\"modal-delete__time\">{eventDate}</span>\r\n      </div>\r\n      <div className=\"modal-delete__description\">\r\n        <i className=\"modal-delete__icon-description far fa-question-circle\"></i>\r\n        <span className=\"modal-delete__info\">\r\n          {additionalInfo === \"\" ? `No additional information` : additionalInfo}\r\n        </span>\r\n      </div>\r\n      <button className=\"modal-delete__btn-delete-event\" onClick={() => deleteEvent(id)}>Delete Event</button>\r\n      {/* <div className=\"change-color\">\r\n        <input\r\n          type=\"color\"\r\n          id=\"eventColor\"\r\n          name=\"eventColor\"\r\n          value={eventColor}\r\n        />\r\n        <button className=\"header-btn modal-delete__btn-change-color\">\r\n          Change color\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteEvent;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nclass AddEvent extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   const eventStartTime = `${(new Date().getHours() + 1)\r\n  //     .toString()\r\n  //     .padStart(2, \"0\")}:00`;\r\n  //   const eventFinishTime = `${(new Date().getHours() + 2)\r\n  //     .toString()\r\n  //     .padStart(2, \"0\")}:00`;\r\n\r\n  //   this.state = {\r\n  //     name: \"\",\r\n  //     eventDate: moment(new Date()).format('YYYY-MM-DD'),\r\n  //     eventTime: [eventStartTime, eventFinishTime],\r\n  //     eventColor: \"#47d6dc\",\r\n  //     additionalInfo: \"\",\r\n  //   };\r\n  // }\r\n\r\n  // handleChange = (event) => {\r\n  //   const { name, value } = event.target;\r\n  //   if (name === \"startEvent\") {\r\n  //     const start = value;\r\n  //     this.state.eventTime.splice(0, 1, start);\r\n  //     this.setState({\r\n  //       eventTime: this.state.eventTime,\r\n  //     });\r\n  //     return;\r\n  //   } else if (name === \"endEvent\") {\r\n  //     const finish = value;\r\n  //     this.state.eventTime.splice(1, 1, finish);\r\n  //     this.setState({\r\n  //       eventTime: this.state.eventTime,\r\n  //     });\r\n  //     return;\r\n  //   }\r\n  //   this.setState({\r\n  //     [name]: value,\r\n  //   });\r\n  // };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.createEvent();\r\n  };\r\n\r\n  render() {\r\n    // const { name, eventDate, eventTime, eventColor } = this.state;\r\n    // const ({  }) = this.props;\r\n    const {\r\n      isModalOpen,\r\n      onModalClose,\r\n      eventDate,\r\n      eventTime,\r\n      additionalInfo,\r\n      name,\r\n      eventColor,\r\n      handleChange,\r\n    } = this.props;\r\n\r\n    if (!isModalOpen) return null;\r\n    return (\r\n      <div className=\"modal-form\">\r\n        <button className=\"modal-form__icon-close\" onClick={onModalClose}>\r\n          <i className=\"far fa-times-circle\"></i>\r\n        </button>\r\n        <span className=\"modal-form__error\"></span>\r\n        <form className=\"create-event\" onSubmit={this.onSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"create-event__name\"\r\n            placeholder=\"Event\"\r\n            value={name}\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"create-event__time\">\r\n            <i className=\"create-event__icon-clock far fa-clock\"></i>\r\n            <input\r\n              className=\"calendar-data\"\r\n              type=\"date\"\r\n              name=\"eventDate\"\r\n              required\r\n              value={eventDate}\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              className=\"startTime\"\r\n              type=\"time\"\r\n              name=\"startEvent\"\r\n              step=\"900\"\r\n              required\r\n              value={eventTime[0]}\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              className=\"endTime\"\r\n              type=\"time\"\r\n              name=\"endEvent\"\r\n              step=\"900\"\r\n              required\r\n              value={eventTime[1]}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"create-event__additional-info\">\r\n            <i className=\"create-event__additional-info-icon fas fa-stream\"></i>\r\n            <textarea\r\n              className=\"create-event__additional-info-text\"\r\n              name=\"additionalInfo\"\r\n              cols=\"30\"\r\n              rows=\"5\"\r\n              placeholder=\"Additional informations\"\r\n              onChange={handleChange}\r\n              value={additionalInfo}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"create-event__additional\">\r\n            <input\r\n              type=\"color\"\r\n              name=\"eventColor\"\r\n              value={eventColor}\r\n              onChange={handleChange}\r\n            />\r\n            <button className=\"create-event__button\" type=\"submit\">\r\n              Create\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEvent;\r\n","const generateNumbers = (from, to) => {\r\n  const newList = [];\r\n  for (let i = from; i <= to; i++) {\r\n    newList.push(i);\r\n  }\r\n  return newList;\r\n};\r\n\r\nexport default generateNumbers;","import moment from 'moment';\r\n\r\nconst getMonday = (date) => {\r\n  const getDate = date.getDate();\r\n  let getDay = date.getDay();\r\n  if (getDay === 0) getDay = 7;\r\n  const getMonday = date.setDate(getDate - getDay + 1);\r\n  const monday = new Date(moment(new Date(getMonday)).format(\"L\"));\r\n  return monday;\r\n};\r\n\r\nexport default getMonday;","import moment from 'moment';\r\nimport generateNumbers from './generateNumbers'\r\nimport getMonday from './getMonday'\r\n\r\nconst generateWeek = (date) => {\r\n  const mondayDate = getMonday(date);\r\n  const currentDateTimestamp = new Date(moment(mondayDate).format(\"L\")).getTime();\r\n  const oneDay = 86400000;\r\n  const days = generateNumbers(0, 6).map((day) => {\r\n    return currentDateTimestamp + day * oneDay;\r\n  });\r\n  return days;\r\n}\r\n\r\nexport default generateWeek\r\n\r\n","import React from \"react\";\r\nimport generateWeek from \"../generateWeek\";\r\nimport moment from \"moment\";\r\n\r\nconst ShowMonth = ({ date }) => {\r\n  const week = generateWeek(date);\r\n  const firstDayOfWeek = new Date(week[0]);\r\n  const lastDayOfWeek = new Date(week[week.length - 1]);\r\n\r\n  const monthForFirstDayOfWeek = moment(firstDayOfWeek).format(\"MMMM\");\r\n  const monthForLastDayOfWeek = moment(lastDayOfWeek).format(\"MMMM\");\r\n  const currentYearForFirstDayOfWeek = moment(firstDayOfWeek).format(\"YYYY\");\r\n  const currentYearForLastDayOfWeek = moment(lastDayOfWeek).format(\"YYYY\");\r\n  const currentYear =\r\n    currentYearForFirstDayOfWeek === currentYearForLastDayOfWeek\r\n      ? `${currentYearForFirstDayOfWeek}`\r\n      : `${currentYearForFirstDayOfWeek} - ${currentYearForLastDayOfWeek}`;\r\n\r\n  return (\r\n    <span className=\"header__month\">\r\n      {monthForFirstDayOfWeek === monthForLastDayOfWeek\r\n        ? `${monthForLastDayOfWeek} ${currentYear}`\r\n        : `${monthForFirstDayOfWeek} - ${monthForLastDayOfWeek} ${currentYear}`}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ShowMonth;\r\n","import React from \"react\";\r\nimport ShowMonth from \"./ShowMonth\";\r\n\r\nconst ControlPanelUser = ({ nextWeek, prevWeek, onToday, date, onCreateModalOpen}) => {\r\n  return (\r\n    <>\r\n      <button className=\"button header__create\" onClick={onCreateModalOpen}>\r\n        <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\r\n          <path fill=\"#34A853\" d=\"M16 16v14h4V20z\"></path>\r\n          <path fill=\"#4285F4\" d=\"M30 16H20l-4 4h14z\"></path>\r\n          <path fill=\"#FBBC05\" d=\"M6 16v4h10l4-4z\"></path>\r\n          <path fill=\"#EA4335\" d=\"M20 16V6h-4v14z\"></path>\r\n          <path fill=\"none\" d=\"M0 0h36v36H0z\"></path>\r\n        </svg>\r\n        Create\r\n      </button>\r\n      <button className=\"button header__today\" onClick={() => onToday(date)}>Today</button>\r\n      <button className=\"change-week-btn\" onClick={prevWeek}>\r\n        <i className=\"header__angle fas fa-angle-left angle-left\"></i>\r\n      </button>\r\n      <button className=\"change-week-btn\" onClick={nextWeek}>\r\n        <i className=\"header__angle fas fa-angle-right angle-rigth\"></i>\r\n      </button>\r\n      <ShowMonth date={date}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ControlPanelUser;\r\n","import React from \"react\";\r\n\r\nconst Setting = () => {\r\n  return (\r\n    <>\r\n      <span className=\"header__setting-icon\">\r\n        <i className=\"fas fa-sliders-h\"></i>\r\n      </span>\r\n      <div className=\"header__setting switch-setting\">\r\n        <div>\r\n          <input type=\"color\" id=\"window\" name=\"window\"  />\r\n          {/* value=\"#ffffff\" */}\r\n          <label htmlFor=\"window\">Main Window </label>\r\n        </div>\r\n        <div>\r\n          <input type=\"color\" id=\"header\" name=\"header\" />\r\n          {/* value=\"#ffffff\" */}\r\n          <label htmlFor=\"header\">Header</label>\r\n        </div>\r\n        <div>\r\n          <input type=\"color\" id=\"event\" name=\"event\"  />\r\n          {/* value=\"#47d6dc\" */}\r\n          <label htmlFor=\"event\">Events</label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"color\"\r\n            id=\"borderEvent\"\r\n            name=\"borderEvent\"\r\n            // value=\"#0000ff\"\r\n          />\r\n          <label htmlFor=\"borderEvent\">Border Events</label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"color\"\r\n            id=\"textEvents\"\r\n            name=\"textEvents\"\r\n            // value=\"#000000\"\r\n          />\r\n          <label htmlFor=\"textEvents\">Text Events</label>\r\n        </div>\r\n        <div className=\"header__setting-btn\">\r\n          <button className=\"header-btn btn-setting\">Save</button>\r\n          <button className=\"header-btn btn-setting-default\">Default</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n","import React from \"react\";\r\nimport ControlPanelUser from \"./ControlPanelUser\";\r\nimport Setting from \"./Setting\";\r\n\r\nconst UserPanel = ({ nextWeek, prevWeek, onToday, date, onCreateModalOpen }) => {\r\n  return (\r\n    <div className=\"header__top-info\">\r\n      <ControlPanelUser\r\n        nextWeek={nextWeek}\r\n        prevWeek={prevWeek}\r\n        onToday={onToday}\r\n        date={date}\r\n        onCreateModalOpen={onCreateModalOpen}\r\n      />\r\n      <Setting />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPanel;\r\n","import React from \"react\";\r\nimport { PureComponent } from \"react\";\r\n\r\nclass RenderDaysOfWeek extends PureComponent {\r\n  render() {\r\n    const daysOfWeek = [\"Mon\", \"Thu\", \"Wen\", \"Tue\", \"Fri\", \"Sat\", \"Sun\"];\r\n    const daysOfWeekList = daysOfWeek.map((day) => {\r\n      return (\r\n        <span key={day} className=\"navigation__days\">\r\n          {day}\r\n        </span>\r\n      );\r\n    });\r\n    return <div className=\"week\">{daysOfWeekList}</div>;\r\n  }\r\n}\r\n\r\nexport default RenderDaysOfWeek;\r\n","import React from \"react\";\r\nimport { PureComponent } from \"react\";\r\n\r\nclass GreenwichZone extends PureComponent {\r\n  render() {\r\n    const formatter = new Intl.DateTimeFormat(\"en\", {\r\n      timeZone: \"UTC\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: false,\r\n    });\r\n    const [formatterHour] = formatter.format(new Date()).split(\":\");\r\n    const timeDifference = (new Date().getHours() - +formatterHour).toString();\r\n    const greenwichTime = `GMT +${\r\n      timeDifference.length < 2 ? timeDifference.padStart(2, 0) : timeDifference\r\n    }:00`;\r\n    return <span className=\"greenwich-zone\">{greenwichTime}</span>;\r\n  }\r\n}\r\n\r\nexport default GreenwichZone;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport getMonday from \"../getMonday\";\r\nimport generateNumbers from \"../generateNumbers\";\r\n\r\nconst RenderDate = ({ date }) => {\r\n  const oneDay = 86400000;\r\n  const mondayDate = getMonday(date);\r\n  const currentDateTimestamp = new Date(\r\n    moment(mondayDate).format(\"L\")\r\n  ).getTime();\r\n\r\n  const days = generateNumbers(0, 6).map((day) => {\r\n    return currentDateTimestamp + day * oneDay;\r\n  });\r\n\r\n  const dateList = days.map((day) => {\r\n    const today = new Date(moment(new Date()).format(\"L\")).getTime();\r\n    return (\r\n      <span\r\n        key={day}\r\n        className={\r\n          today === day\r\n            ? \"curent-date-of-week date-today\"\r\n            : \"curent-date-of-week\"\r\n        }\r\n      >\r\n        {new Date(day).getDate()}\r\n      </span>\r\n    );\r\n  });\r\n  return <div className=\"date-of-month\">{dateList}</div>;\r\n};\r\n\r\nexport default RenderDate;\r\n","import React from \"react\";\r\nimport RenderDaysOfWeek from '../Renders/RenderDaysOfWeek'\r\nimport GreenwichZone from \"../GreenwichZone\";\r\nimport RenderDate from \"../Renders/RenderDate\";\r\n\r\nconst Navigation = ({date}) => {\r\n  \r\n  return (\r\n    <nav className=\"navigation\">\r\n      <RenderDaysOfWeek />\r\n      <RenderDate date={date}/>\r\n      <GreenwichZone />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport UserPanel from \"./UserPanel\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst Header = ({ date, nextWeek, prevWeek, onToday, onCreateModalOpen }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <UserPanel\r\n        nextWeek={nextWeek}\r\n        prevWeek={prevWeek}\r\n        onToday={onToday}\r\n        date={date}\r\n        onCreateModalOpen={onCreateModalOpen}\r\n      />\r\n      <Navigation date={date} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { PureComponent } from \"react\";\r\nimport generateNumbers from \"../generateNumbers\";\r\n\r\nclass TimeTrack extends PureComponent {\r\n  render() {\r\n    const hoursByDay = generateNumbers(1, 24);\r\n    const hoursList = hoursByDay.map((hour) => {\r\n      return (\r\n        <li className=\"time-in-day\" key={hour}>\r\n          {hour.toString().length === 1 ? `0${hour}:00` : `${hour}:00`}\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <aside>\r\n        <ul className=\"time\">{hoursList}</ul>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeTrack;\r\n","const styleForEvent = (event) => {\r\n  const [startTime, endTime] = event.eventTime;\r\n  let [getStartHour, getStartMinutes] = startTime.split(':').map(elem => +elem);\r\n  let [getEndHour, getEndMinutes] = endTime.split(':').map(elem => +elem);\r\n\r\n  if (getEndHour - getStartHour === 0) {\r\n    return {\r\n      height: `${getEndMinutes - getStartMinutes}px`,\r\n      top: `${getStartMinutes}px`,\r\n      backgroundColor: `${event.eventColor}`\r\n    }\r\n  } else if (getEndHour - getStartHour === 1 && getStartMinutes > getEndMinutes) {\r\n    getEndMinutes += 60;\r\n    return {\r\n      height: `${getEndMinutes - getStartMinutes}px`,\r\n      top: `${getStartMinutes}px`,\r\n      backgroundColor: `${event.eventColor}`\r\n    }\r\n  } else {\r\n    return {\r\n      height: `${60 * (getEndHour - getStartHour) + (getEndMinutes - getStartMinutes)}px`,\r\n      top: `${getStartMinutes}px`,\r\n      backgroundColor: `${event.eventColor}`\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default styleForEvent;","import React from \"react\";\r\nimport styleForEvent from \"../styleForEvent\";\r\n\r\nconst RenderEvent = ({ events, onDeleteModalOpen }) => {\r\n  const eventsList = events.map((meet) => {\r\n    const style = styleForEvent(meet);\r\n    return (\r\n      <div\r\n        key={meet.id}\r\n        data-id=\"11\"\r\n        className=\"event\"\r\n        style={style}\r\n        onClick={(event) => onDeleteModalOpen(event, meet)}\r\n      >\r\n        <span>{meet.name}</span>\r\n        <span>\r\n          {meet.eventTime[0]} - {meet.eventTime[1]}\r\n        </span>\r\n        <span className=\"event__description\">{meet.additionalInfo}</span>\r\n      </div>\r\n    );\r\n  });\r\n  return <>{eventsList}</>;\r\n};\r\n\r\nexport default RenderEvent;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nclass RealTimeLine extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hourTime: new Date().getHours(),\r\n      minutesTime: new Date().getMinutes(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerId = setInterval(() => {\r\n      this.setState({\r\n        hourTime: new Date().getHours(),\r\n        minutesTime: new Date().getMinutes(),\r\n      });\r\n    }, 60000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n\r\n  render() {\r\n    const { hourTime, minutesTime} = this.state;\r\n    const style = `${60 * hourTime + minutesTime}px`;\r\n    return (\r\n      <span className=\"line-now\" style={{ top: style }}>\r\n        <span className=\"line-now__time\">\r\n          {String(hourTime).padStart(2, '0')}:{String(minutesTime).padStart(2, '0')}\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RealTimeLine;\r\n","import React from \"react\";\r\nimport generateNumbers from \"../generateNumbers\";\r\nimport RenderEvent from \"./RenderEvent\";\r\nimport RealTimeLine from \"./RealTimeLine\";\r\nimport moment from 'moment'\r\n\r\nconst RenderDay = ({\r\n  dayOfWeek,\r\n  event,\r\n  day,\r\n  onDeleteModalOpen,\r\n  on–°ellModalOpen\r\n}) => {\r\n  const dateToday = moment(new Date()).format(\"YYYY-MM-DD\");\r\n  const isToday = day === +moment(dateToday).format('x');\r\n  const hours = generateNumbers(0, 23).map((hour) => {\r\n    const evenInThisTime = event.filter((e) => {\r\n      const convertStartTime = e.eventTime[0].split(\":\");\r\n      const startTime = +convertStartTime[0];\r\n      return startTime === hour;\r\n    });\r\n    return (\r\n      <div\r\n        key={hour}\r\n        className=\"row-hour\"\r\n        data-hour={hour}\r\n        onClick={() => on–°ellModalOpen(day, hour)}\r\n      >\r\n        {evenInThisTime.length > 0 && (\r\n          <RenderEvent\r\n            events={evenInThisTime}\r\n            onDeleteModalOpen={onDeleteModalOpen}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"day-by-hours\" data-date-of-day={dayOfWeek}>\r\n      {hours}\r\n      {isToday && <RealTimeLine />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderDay;\r\n","import React from \"react\";\r\nimport RenderDay from \"./RenderDay\";\r\nimport generateWeek from \"../generateWeek\";\r\n\r\nconst RenderWeek = ({ date, events, onDeleteModalOpen, on–°ellModalOpen }) => {\r\n  const week = generateWeek(date);\r\n  const weekList = week.map((day) => {\r\n    const eventForThisDay = events.filter((event) => {\r\n      return day === new Date(event.eventDate).getTime();\r\n    });\r\n    return (\r\n      <RenderDay\r\n        key={day}\r\n        dayOfWeek={day}\r\n        on–°ellModalOpen={on–°ellModalOpen}\r\n        day={day}\r\n        event={eventForThisDay}\r\n        onDeleteModalOpen={onDeleteModalOpen}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <section className=\"current-week\">{weekList}</section>;\r\n};\r\n\r\nexport default RenderWeek;\r\n","import React, { Component } from \"react\";\r\nimport TimeTrack from \"./Renders/TimeTrack\";\r\nimport RenderWeek from \"./Renders/RenderWeek\";\r\n\r\nclass CalendarSheet extends Component {\r\n  // state = {\r\n  //   events: [\r\n  //     {\r\n  //       id: \"1\",\r\n  //       name: \"Test\",\r\n  //       eventDate: \"04-14-2020\",\r\n  //       eventTime: [\"05:00\", \"05:30\"],\r\n  //       additionalInfo: \"aaaaaaaa\",\r\n  //       eventColor: \"#333aaa\",\r\n  //     },\r\n  //     {\r\n  //       id: \"2\",\r\n  //       name: \"Test2\",\r\n  //       eventDate: \"04-14-2020\",\r\n  //       eventTime: [\"05:30\", \"06:00\"],\r\n  //       additionalInfo: \"aaaaaaaaaaa\",\r\n  //       eventColor: \"#ef3ddd\",\r\n  //     },\r\n  //     {\r\n  //       id: \"3\",\r\n  //       name: \"Test2\",\r\n  //       eventDate: \"04-15-2020\",\r\n  //       eventTime: [\"05:45\", \"09:00\"],\r\n  //       additionalInfo: \"dsadsdasds\",\r\n  //       eventColor: \"#af62ad\",\r\n  //     },\r\n  //     {\r\n  //       id: \"4\",\r\n  //       name: \"Test2\",\r\n  //       eventDate: \"04-16-2020\",\r\n  //       eventTime: [\"05:00\", \"09:00\"],\r\n  //       additionalInfo: \"asdasdasd\",\r\n  //       eventColor: \"#aa3q1d\",\r\n  //     },\r\n  //   ],\r\n  // };\r\n  render() {\r\n    const { date, onDeleteModalOpen, events, on–°ellModalOpen } = this.props;\r\n    return (\r\n      <main className=\"days\">\r\n        <TimeTrack />\r\n        <RenderWeek\r\n          date={date}\r\n          on–°ellModalOpen={on–°ellModalOpen}\r\n          events={events}\r\n          onDeleteModalOpen={onDeleteModalOpen}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\n// const CalendarSheet = ({ date, onModalOpen }) => {\r\n//   return (\r\n//     <main className=\"days\">\r\n//       <TimeTrack />\r\n//       <RenderWeek date={date} onModalOpen={onModalOpen} />\r\n//     </main>\r\n//   );\r\n// };\r\n\r\nexport default CalendarSheet;\r\n","const baseUrl = \"https://5e6b6f91d708a000160b48ba.mockapi.io/api/v1/events\";\r\n\r\nexport const fetchEventsList = () => {\r\n  return fetch(baseUrl)\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n    })\r\n    .then(eventsList => eventsList)\r\n}\r\n\r\nexport const fetchEvents = () => {\r\n  return fetch(baseUrl)\r\n    .then((response) => response.json())\r\n    .then((events) =>\r\n      this.setState({\r\n        events: events,\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteEvent = (id) => {\r\n  return fetch(`${baseUrl}/${id}`, {\r\n    method: 'DELETE'\r\n  })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete task');\r\n      }\r\n    })\r\n}\r\n\r\nexport const createEvent = newEvent => {\r\n  return fetch(baseUrl, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=utf-8\",\r\n    },\r\n    body: JSON.stringify(newEvent),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(\"Faild to create task\");\r\n      }\r\n    });\r\n}","import React, { Component } from \"react\";\r\nimport DeleteEvent from \"./PopUp/DeleteEvent\";\r\nimport AddEvent from \"./PopUp/AddEvent\";\r\nimport Header from \"./Header/Header\";\r\nimport CalendarSheet from \"./CalendarSheet\";\r\nimport moment from \"moment\";\r\nimport getMonday from \"./getMonday\";\r\nimport { fetchEventsList, deleteEvent, createEvent } from \"./eventGateway\";\r\n\r\nclass Calendar extends Component {\r\n  state = {\r\n    date: new Date(),\r\n    name: \"\",\r\n    eventDate: null,\r\n    eventTime: [],\r\n    eventColor: \"#47d6dc\",\r\n    additionalInfo: \"\",\r\n    isModalOpen: false,\r\n    isDeleteOpen: false,\r\n    eventForDelete: null,\r\n    events: [],\r\n  };\r\n\r\n  createEvent = () => {\r\n    const {\r\n      eventDate,\r\n      eventTime,\r\n      additionalInfo,\r\n      name,\r\n      eventColor,\r\n    } = this.state;\r\n    const newEvent = {\r\n      eventDate: moment(eventDate).format(\"MM-DD-YYYY\"),\r\n      eventTime,\r\n      additionalInfo,\r\n      name,\r\n      eventColor,\r\n    };\r\n    createEvent(newEvent).then(() => {\r\n      this.setState({\r\n        isModalOpen: false,\r\n      });\r\n      return this.fetchEvents();\r\n    });\r\n  };\r\n\r\n  nextWeek = () => {\r\n    const { date } = this.state;\r\n    this.setState({\r\n      date: new Date(date.setDate(date.getDate() + 7)),\r\n    });\r\n  };\r\n\r\n  prevWeek = () => {\r\n    const { date } = this.state;\r\n    this.setState({\r\n      date: new Date(date.setDate(date.getDate() - 7)),\r\n    });\r\n  };\r\n\r\n  onToday = (date) => {\r\n    const mondayDateCurrentWeek = getMonday(new Date()).getTime();\r\n    const mondayDateCheck = getMonday(date).getTime();\r\n\r\n    if (mondayDateCurrentWeek === mondayDateCheck) return;\r\n    this.setState({\r\n      date: new Date(),\r\n    });\r\n  };\r\n\r\n  onCreateModalOpen = () => {\r\n    const eventStartTime = `${(new Date().getHours() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}:00`;\r\n    const eventFinishTime = `${(new Date().getHours() + 2)\r\n      .toString()\r\n      .padStart(2, \"0\")}:00`;\r\n    const dateToday = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\r\n    this.setState({\r\n      isModalOpen: true,\r\n      eventDate: dateToday,\r\n      name: \"\",\r\n      additionalInfo: \"\",\r\n      eventTime: [eventStartTime, eventFinishTime],\r\n    });\r\n  };\r\n\r\n  onDeleteModalOpen = (event, eventId) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      isDeleteOpen: true,\r\n      eventForDelete: eventId,\r\n    });\r\n  };\r\n\r\n  onModalClose = () => {\r\n    this.setState({\r\n      isModalOpen: false,\r\n    });\r\n  };\r\n\r\n  closeDeleteModal = () => {\r\n    this.setState({\r\n      isDeleteOpen: false,\r\n    });\r\n  };\r\n\r\n  deleteEvent = (id) => {\r\n    deleteEvent(id).then(() => {\r\n      this.setState({\r\n        isDeleteOpen: false,\r\n      });\r\n      return this.fetchEvents();\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"startEvent\") {\r\n      const start = value;\r\n      this.state.eventTime.splice(0, 1, start);\r\n      this.setState({\r\n        eventTime: this.state.eventTime,\r\n      });\r\n      return;\r\n    } else if (name === \"endEvent\") {\r\n      const finish = value;\r\n      this.state.eventTime.splice(1, 1, finish);\r\n      this.setState({\r\n        eventTime: this.state.eventTime,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  on–°ellModalOpen = (day, hour) => {\r\n    const todayHour = new Date().getHours();\r\n    const todayTimestamp = new Date(moment(new Date()).format(\"MM-DD-YYYY\")).getTime();\r\n\r\n    if (todayTimestamp > day || (todayTimestamp === day && todayHour >= hour)) return;\r\n\r\n    const eventStartTime = `${hour.toString().padStart(2, \"0\")}:00`;\r\n    const eventFinishTime = `${(hour + 1).toString().padStart(2, \"0\")}:00`;\r\n    const dateToday = moment(new Date(day)).format(\"YYYY-MM-DD\");\r\n\r\n    this.setState({\r\n      isModalOpen: true,\r\n      eventDate: dateToday,\r\n      name: \"\",\r\n      additionalInfo: \"\",\r\n      eventTime: [eventStartTime, eventFinishTime],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents();\r\n  }\r\n\r\n  fetchEvents = () => {\r\n    fetchEventsList()\r\n      .then((events) =>\r\n        this.setState({\r\n          events: events,\r\n        })\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calendar\">\r\n        <DeleteEvent\r\n          isDeleteOpen={this.state.isDeleteOpen}\r\n          eventForDelete={this.state.eventForDelete}\r\n          closeDeleteModal={this.closeDeleteModal}\r\n          deleteEvent={this.deleteEvent}\r\n        />\r\n        <AddEvent\r\n          isModalOpen={this.state.isModalOpen}\r\n          onModalClose={this.onModalClose}\r\n          name={this.state.name}\r\n          eventDate={this.state.eventDate}\r\n          eventTime={this.state.eventTime}\r\n          additionalInfo={this.state.additionalInfo}\r\n          handleChange={this.handleChange}\r\n          eventColor={this.state.eventColor}\r\n          createEvent={this.createEvent}\r\n        />\r\n        <Header\r\n          date={this.state.date}\r\n          nextWeek={this.nextWeek}\r\n          prevWeek={this.prevWeek}\r\n          onToday={this.onToday}\r\n          onCreateModalOpen={this.onCreateModalOpen}\r\n        />\r\n        <CalendarSheet\r\n          date={this.state.date}\r\n          on–°ellModalOpen={this.on–°ellModalOpen}\r\n          onDeleteModalOpen={this.onDeleteModalOpen}\r\n          events={this.state.events}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\nimport Calendar from './Calendar'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Calendar />\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}